@model kol01_hoangthuylinh.Models.tblKOL
@{ 
    ViewBag.Title = "Tiểu sử";
}

<div class="x_panel about-me">
    <div class="x_content">
        <form id="frmEdit">
            @Html.HiddenFor(m => m.Id)
            <div class="item form-group">
                <label class="col-form-label col-md-2 col-sm-2 label-align">Tiêu đề <span class="text-red">*</span></label>
                <div class="col-md-9 col-sm-9 col-xs-12">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control required", @placeholder = "Tiêu đề bài viết" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row form-group">
                <label class="col-form-label col-md-2 col-sm-2 label-align">Avatar <span class="text-red">*</span></label>
                <div class="col-md-10 col-sm-10 col-xs-12">
                    <button class="btn btn-success " type="button" id="btnPostContent" onclick="showImg();">
                        <i class="fa fa-check-circle"></i>
                        <span>Chọn hình</span>
                    </button>
                    <div>
                        <span id="error-Avatar" class="text-danger"></span>
                    </div>
                    <div class="col-sm-12 ps-0">
                        <div id="loadImgThumbnail" class="files" style="width:820px; ">
                            @if (!string.IsNullOrEmpty(Model.Avatar))
                            {
                                <img src="@Model.Avatar" />
                            }
                        </div>
                        @Html.Hidden("Avatar")
                    </div>

                </div>
            </div>
            <div class="item form-group">
                <div class="col-md-2 col-sm-2">
                    <div class="col-form-label label-align">Teaser <span class="text-red">*</span></div>
                </div>
                <div class="col-md-9 col-sm-9 col-xs-12 ckeditor">
                    @Html.Hidden("Body")
                    <div class="document-editor__toolbar"></div>
                    <div id="editor">
                        @Html.Raw(Model.Body)
                    </div>
                    <span id="error-Body" class="text-danger"></span>
                </div>
            </div>
            <div class="item form-group">
                <label class="col-form-label col-md-2 col-sm-2 label-align"></label>
                <div class="col-md-9 col-sm-9 col-xs-12">
                    <input type="button" value="Lưu" class="btn btn-danger" onclick="SaveAboutMe(); return false;" />
                </div>
            </div>
        </form>
    </div>
</div>
@Html.Partial("_modal")


@section scripts{
    <script src="/js/ckeditor.js"></script>
    <script type="text/javascript">
        function initValidate() {
            var submitSettings = $.data($("#frmEdit").get(0), 'validator').settings;

            submitSettings.messages = {
                Title: {
                    required: "Vui lòng nhập tiêu đề",
                },
                Teaser: {
                    required: "Vui lòng nhập tóm tắt",
                },
            };
        }

        function initValidateUrl() {
            var submitSettings = $.data($("#frmUrl").get(0), 'validator').settings;
            submitSettings.messages = {
                urlImage: {
                    required: "Vui lòng nhập link hình",
                },
            };
        }

        function SaveUrl() {
            if ($("#frmUrl").valid()) {
                var url = $("#urlImage").val();
                var img = '<img src="' + url + '" class="img-content" />&nbsp;';
                $("#loadImgThumbnail").html(img);
                $("#Avatar").val(url);
                $('#error-Avatar').html("");
                $('#frmdlg').modal('hide');
            }
        }

        function showImg() {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ShowUrlImage", "AboutMe")",
                success: function (res) {
                    $('#frmdlg .modal-body').html(res);
                    $('#frmdlg .modal-title').html('Nhập Url hình');
                    $('#frmdlg').modal('show');
                    $("#frmEdit").removeData("validator");
                    $.validator.unobtrusive.parse(document);
                    initValidateUrl();
                }
            })
        }

        function SaveAboutMe() {
            if ($("#frmEdit").valid()) {
                $('#Body').val(editor.getData());
                var frm = $("#frmEdit").serializeArray();
                $.ajax({
                    url: "@Url.Action("UpdateAboutMe", "AboutMe")",
                    data: frm,
                    type: "POST",
                    success: function (msg) {
                        if (msg == "ok") {
                            window.location.reload();
                        }
                    }
                })
            }
        }

        $(document).ready(function () {
            initValidate();

        })

        DecoupledDocumentEditor
            .create(document.querySelector('#editor'), {
                mediaEmbed: { previewsInData: !0 },
                toolbar: {
                    items: [
                        'heading', '|', 'fontSize', 'fontFamily', '|', 'bold', 'italic', 'underline', 'strikethrough', 'highlight', '|', 'alignment',
                        '|', 'numberedList', 'bulletedList', '|', 'indent', 'outdent',
                        '|', 'todoList', 'link', 'blockQuote', 'imageUpload', 'insertTable', 'mediaEmbed', '|', 'undo', 'redo'
                    ]
                },
                image: {
                    toolbar: [
                        'imageTextAlternative', 'imageStyle:full', 'imageStyle:side'
                    ]
                },
                table: {
                    contentToolbar: [
                        'tableColumn', 'tableRow', 'mergeTableCells'
                    ]
                },
            })
            .then(editor => {
                window.editor = editor;
                document.querySelector('.document-editor__toolbar').appendChild(editor.ui.view.toolbar.element);
                document.querySelector('.ck-toolbar').classList.add('ck-reset_all');
            })
            .catch(error => {
            });

    </script>
} 